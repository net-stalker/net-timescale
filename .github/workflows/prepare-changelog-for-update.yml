name: Prepare CHANGELOG.md for update

on:
  pull_request:
    branches: [ "*" ]
  
env:
  CARGO_TERM_COLOR: always

jobs:
  prepare-changelog:
    name: prepare-changelog
    
    permissions:
      contents: write
    
    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.OWNER_PAT }}
          fetch-depth: 0

      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v7

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Install Python deps
        env:
          REQUIREMENTS: https://raw.github.com/net-stalker/net-registry-index/develop/scripts/requirements.txt
        run: |
          wget $REQUIREMENTS
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up GIT credentials
        run: |
          git config --global credential.helper store
          echo "https://${{ secrets.OWNER }}:${{ secrets.OWNER_PAT }}@github.com" > ~/.git-credentials
          git config --global user.email "test@netstalker.io"
          git config --global user.name ${{ secrets.OWNER }}
      
      - name: Get script for changelog prepearing
        env:
          CHANGELOG_PREPARATOR: https://raw.github.com/net-stalker/net-registry-index/develop/scripts/changelog_preparator.py
        run: |
          wget $CHANGELOG_PREPARATOR
          chmod +x changelog_preparator.py

      - name: Prepare CHANGELOG.md for a new log
        env:
          CARGO_MANIFEST_DIR: ${{ github.workspace }}
        run: |
          echo "${{ github.event.head_commit.message }}"
          export GIT_MSG="${{ github.event.head_commit.message }}"
          export GIT_HASH=$(git rev-parse --short "$GITHUB_SHA")
          git switch "${{ steps.branch-name.outputs.current_branch }}"
          cat CHANGELOG.md
          export PREPARATOR_RESULT=$(./changelog_preparator.py $CARGO_MANIFEST_DIR)
          if [["$PREPARATOR_RESULT" == "updated"]]; then
            git add CHANGELOG.md
            git commit -m "${{ steps.branch-name.outputs.current_branch }}: prepared CHANGELOG.md"
            git push
            echo "CHANGELOG.md has been prepared for updation"
          elif [[ "$PREPARATOR_RESULT" == "correct" ]]; then
            echo "CHANGELOG.md has been already updated previously"
          fi